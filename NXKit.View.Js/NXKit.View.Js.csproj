<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TypeScript\Microsoft.TypeScript.Default.props" Condition="Exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TypeScript\Microsoft.TypeScript.Default.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <ProjectGuid>{C7AEDB60-A136-4356-9C04-35AA344D857E}</ProjectGuid>
    <ProjectTypeGuids>{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
    <OutputPath>bin</OutputPath>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <OldToolsVersion>4.0</OldToolsVersion>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <RootNamespace>NXKit.View.Js</RootNamespace>
    <AssemblyName>NXKit.View.Js</AssemblyName>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">12.0</VisualStudioVersion>
    <CodeContractsAssemblyMode>1</CodeContractsAssemblyMode>
    <NuGetPackageImportStamp>a4edeebc</NuGetPackageImportStamp>
  </PropertyGroup>
  <ItemGroup>
    <TypeScriptCompile Include="DeferredExecutor.ts" />
    <TypeScriptCompile Include="ICallback.ts" />
    <TypeScriptCompile Include="IEvent.ts" />
    <TypeScriptCompile Include="IInterfaceMap.ts" />
    <TypeScriptCompile Include="Interface.ts" />
    <TypeScriptCompile Include="InterfaceMap.ts" />
    <TypeScriptCompile Include="IPropertyMap.ts" />
    <TypeScriptCompile Include="IServerInvoke.ts" />
    <TypeScriptCompile Include="Knockout\CheckboxBindingHandler.ts" />
    <TypeScriptCompile Include="Knockout\HorizontalVisibleBindingHandler.ts" />
    <TypeScriptCompile Include="Knockout\InputBindingHandler.ts" />
    <TypeScriptCompile Include="Knockout\ModalBindingHandler.ts" />
    <TypeScriptCompile Include="Knockout\VisibleBindingHandler.ts" />
    <TypeScriptCompile Include="LayoutOptions.ts" />
    <TypeScriptCompile Include="Log.ts" />
    <TypeScriptCompile Include="Message.ts" />
    <TypeScriptCompile Include="Node.ts" />
    <TypeScriptCompile Include="NodeType.ts" />
    <TypeScriptCompile Include="NodeViewModel.ts" />
    <TypeScriptCompile Include="Property.ts" />
    <TypeScriptCompile Include="PropertyMap.ts" />
    <TypeScriptCompile Include="Scripts\typings\jqueryui\jqueryui.d.ts" />
    <TypeScriptCompile Include="Scripts\typings\jquery\jquery.d.ts" />
    <TypeScriptCompile Include="Scripts\typings\knockout\knockout.d.ts" />
    <TypeScriptCompile Include="Scripts\typings\nxkit\NXKit.d.ts" />
    <TypeScriptCompile Include="Scripts\typings\requirejs\require.d.ts" />
    <TypeScriptCompile Include="Scripts\typings\semantic\semantic.d.ts" />
    <TypeScriptCompile Include="Severity.ts" />
    <TypeScriptCompile Include="TypedEvent.ts" />
    <TypeScriptCompile Include="Util.ts" />
    <TypeScriptCompile Include="View.ts" />
    <TypeScriptCompile Include="ViewModelUtil.ts" />
  </ItemGroup>
  <ItemGroup>
    <None Include="nxkit.js.prefix" />
    <None Include="nxkit.js.suffix" />
    <None Include="NXKit.View.Js.nuspec" />
    <None Include="package.json" />
    <None Include="packages.config" />
    <None Include="View.less" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Text.html" />
    <None Include="View.html" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="IViewModuleDependencyProvider.cs" />
    <TypeScriptCompile Include="Knockout\NodeBindingHandler.ts" />
    <Compile Include="IViewModuleProvider.cs" />
    <Compile Include="ViewModuleExtension.cs" />
    <Compile Include="ViewModuleDependency.cs" />
    <Compile Include="ViewModuleDependencyJsonConverter.cs" />
    <Compile Include="ViewModuleDependencyProvider.cs" />
    <Compile Include="ViewModuleInfo.cs" />
    <Compile Include="ViewModuleProvider.cs" />
    <Compile Include="ViewModuleType.cs" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\Newtonsoft.Json.6.0.8\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.ComponentModel.Composition" />
    <Reference Include="System.XML" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\NXKit.View.Server\NXKit.View.Server.csproj">
      <Project>{a296bbea-d7b7-40e6-b107-558413a59b8c}</Project>
      <Name>NXKit.View.Server</Name>
    </ProjectReference>
    <ProjectReference Include="..\NXKit\NXKit.csproj">
      <Project>{2b27233a-849a-4339-96c6-babcb968b8b0}</Project>
      <Name>NXKit</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="nx-css.js" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="nx-html.js" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="nx-js.js" />
  </ItemGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptOutFile>obj\Debug\nxkit.ts.js</TypeScriptOutFile>
    <TypeScriptNoImplicitAny>True</TypeScriptNoImplicitAny>
    <TypeScriptGeneratesDeclarations>True</TypeScriptGeneratesDeclarations>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>True</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>True</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptOutFile>obj\Release\nxkit.ts.js</TypeScriptOutFile>
    <TypeScriptNoImplicitAny>True</TypeScriptNoImplicitAny>
    <TypeScriptGeneratesDeclarations>True</TypeScriptGeneratesDeclarations>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>True</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>True</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>True</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptSourceMap>False</TypeScriptSourceMap>
    <TypeScriptRemoveComments>True</TypeScriptRemoveComments>
    <TypeScriptModuleKind>none</TypeScriptModuleKind>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <TypeScriptSourceMap>False</TypeScriptSourceMap>
    <TypeScriptRemoveComments>True</TypeScriptRemoveComments>
  </PropertyGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TypeScript\Microsoft.TypeScript.targets" Condition="Exists('$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)\TypeScript\Microsoft.TypeScript.targets')" />
  <Import Project="$(ProjectDir)..\NXKit.targets" Condition="Exists('$(ProjectDir)..\NXKit.targets')" />
  <Import Project="$(ProjectDir)..\NXKit.Node.targets" Condition="Exists('$(ProjectDir)..\NXKit.Node.targets')" />
  <Target Name="BuildJs" DependsOnTargets="CompileTypeScript">
    <ItemGroup>
      <BuildJsInputPaths Include="nxkit.js.prefix" />
      <BuildJsInputPaths Include="$(IntermediateOutputPath)nxkit.ts.js" />
      <BuildJsInputPaths Include="nxkit.js.suffix" />
    </ItemGroup>
    <ConcatinateTask InputPaths="@(BuildJsInputPaths)" OutputPath="$(IntermediateOutputPath)nxkit.js" />
    <UglifyJsTask InputPath="$(IntermediateOutputPath)nxkit.js" OutputPath="$(IntermediateOutputPath)nxkit.min.js" />
    <ItemGroup>
      <EmbeddedResource Include="$(IntermediateOutputPath)nxkit.js">
        <LogicalName>$(RootNamespace).nxkit.js</LogicalName>
      </EmbeddedResource>
      <EmbeddedResource Include="$(IntermediateOutputPath)nxkit.min.js">
        <LogicalName>$(RootNamespace).nxkit.min.js</LogicalName>
      </EmbeddedResource>
    </ItemGroup>
  </Target>
  <Target Name="BuildHtml">
    <ItemGroup>
      <BuildHtmlInputPaths Include="*.html" />
    </ItemGroup>
    <ConcatinateTask InputPaths="@(BuildHtmlInputPaths)" OutputPath="$(IntermediateOutputPath)nxkit.html" />
    <ItemGroup>
      <EmbeddedResource Include="$(IntermediateOutputPath)nxkit.html">
        <LogicalName>$(RootNamespace).nxkit.html</LogicalName>
      </EmbeddedResource>
    </ItemGroup>
  </Target>
  <Target Name="BuildLess">
    <ItemGroup>
      <BuildLessInputPaths Include="*.less" />
    </ItemGroup>
    <LessTask InputPaths="@(BuildLessInputPaths)" OutputPath="$(IntermediateOutputPath)nxkit.css" />
    <ItemGroup>
      <EmbeddedResource Include="$(IntermediateOutputPath)nxkit.css">
        <LogicalName>$(RootNamespace).nxkit.css</LogicalName>
      </EmbeddedResource>
    </ItemGroup>
  </Target>
  <Target Name="AfterResolveReferences" DependsOnTargets="BuildJs;BuildHtml;BuildLess">
  </Target>
  <Target Name="AfterBuild">
    <ItemGroup>
      <WebContentOutputItems Include="$(OutputPath)nxkit-xforms.js">
        <TargetPath>Scripts\nxkit.js</TargetPath>
      </WebContentOutputItems>
      <WebContentOutputItems Include="$(OutputPath)nxkit-xforms.min.js">
        <TargetPath>Scripts\nxkit.min.js</TargetPath>
      </WebContentOutputItems>
      <WebContentOutputItems Include="$(OutputPath)nxkit-xforms.html">
        <TargetPath>Content\nxkit.html</TargetPath>
      </WebContentOutputItems>
      <WebContentOutputItems Include="$(OutputPath)nxkit-xforms.css">
        <TargetPath>Content\nxkit.css</TargetPath>
      </WebContentOutputItems>
    </ItemGroup>
    <Copy SourceFiles="$(IntermediateOutputPath)nxkit.ts.d.ts" DestinationFiles="$(OutputPath)nxkit.d.ts" />
  </Target>
  <Import Project="..\packages\GitVersionTask.2.0.1\Build\GitVersionTask.targets" Condition="Exists('..\packages\GitVersionTask.2.0.1\Build\GitVersionTask.targets')" />
</Project>